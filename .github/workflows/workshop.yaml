name: CICD-workshop-actions

on:
  push:
    branches:
      - main
    tags:
      - 'releases/v[0-9]+.[0-9]+'

jobs:
  Scan:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          format: 'table'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL'
          output: trivy.txt

      - name: Find trivytxt
        id: search_file
        run: |
          if grep -q "HIGH" trivy.txt; then
            echo "::set-output name=Trivy_Status::Failed"
          else
            echo "::set-output name=Trivy_Status::Success"
          fi
     

      - name: Slack Notification When trivy failure
        if: success() && steps.search_file.outputs.Trivy_Status == 'Failed'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: 'Scan failed - Sun Jiahao'
          SLACK_MESSAGE: 'Failed trivy scan, see uploaded report'
          SLACK_COLOR: 'failure'
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}  


      - name: Upload Failure txt
        if: success() && steps.search_file.outputs.Trivy_Status == 'Failed'
        uses: MeilCli/slack-upload-file@v4
        with:
          slack_token: ${{ secrets.SLACK_TOKEN }}
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          file_path: 'trivy.txt'
          initial_comment: 'Scan report by Sun Jiahao.'
      
      
      - name: Build and Push Docker Image
        if: success() && steps.search_file.outputs.Trivy_Status == 'Success'
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker build -t sun1ny/sun1nyworkshop:${{ github.sha }} .
          docker push sun1ny/sun1nyworkshop:${{ github.sha }}

      - name: Sign Docker Image
        env:
        DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE: ${{ secrets.DOCKER_CONTENT_TRUST_REPOSITORY_PASSPHRASE }}
        run: |
        export DOCKER_CONTENT_TRUST=1
        docker trust sign sun1ny/sun1nyworkshop:${{ github.sha }}
      - name: Install Cosign
        uses: sigstore/cosign-installer@v2.8.1
        with:
          cosign-release: 'v1.13.1'

      - name: Sign Docker Image
        env:
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          cosign sign -key env://COSIGN_PRIVATE_KEY sun1ny/sun1nyworkshop:${{ github.sha }}

